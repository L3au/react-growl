{"ast":null,"code":"import React, { useState, useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nvar styles = {\n  \"growl\": \"_styles-module__growl__2Nm_9\",\n  \"active\": \"_styles-module__active__3sodH\",\n  \"growlClose\": \"_styles-module__growlClose__3JGMO\"\n};\n\nconst Growl = _ref => {\n  let {\n    active,\n    message,\n    onDismissed\n  } = _ref;\n  return React.createElement(\"div\", {\n    className: classNames(styles.growl, {\n      [styles.active]: active\n    })\n  }, message, React.createElement(\"div\", {\n    onClick: onDismissed,\n    className: styles.growlClose\n  }));\n};\n\nfunction useGrowl() {\n  let timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3000;\n  const [growlActive, setGrowlActive] = useState(false);\n  const timerRef = useRef();\n  useEffect(() => {\n    if (timerRef.current) {\n      window.clearTimeout(timerRef.current);\n    }\n\n    if (growlActive) {\n      timerRef.current = window.setTimeout(() => {\n        setGrowlActive(false);\n      }, timeout);\n    }\n  }, [growlActive, timeout]);\n  return [growlActive, active => {\n    setGrowlActive(active);\n  }];\n}\n\nexport { Growl, useGrowl };","map":{"version":3,"sources":["../src/Growl.tsx","../src/useGrowl.ts"],"names":["Growl","onDismissed","className","classNames","styles","active","onClick","growlClose","useGrowl","timeout","useState","timerRef","useRef","useEffect","window","setGrowlActive"],"mappings":";;;;;;;;MAWaA,KAAK,GAAG;EAAA,IAAC;IAAA,MAAA;IAAA,OAAA;IAAmBC;EAAnB,CAAD;EAAA,OACnB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IACEC,SAAS,EAAEC,UAAU,CAACC,MAAM,CAAP,KAAA,EAAe;MAClC,CAACA,MAAM,CAAP,MAAA,GAAiBC;IADiB,CAAf;EADvB,CAAA,EAAA,OAAA,EAME,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAKC,OAAO,EAAEL,WAAd;IAA2BC,SAAS,EAAEE,MAAM,CAACG;EAA7C,CAAA,CANF,CADmB;AAAA,C;;SCTLC,Q,GAA2B;EAAA,IAAlBC,OAAkB,uEAAA,IAAA;EAEzC,MAAM,CAAA,WAAA,EAAA,cAAA,IAAgCC,QAAQ,CAA9C,KAA8C,CAA9C;EACA,MAAMC,QAAQ,GAAGC,MAAjB,EAAA;EAEAC,SAAS,CAAC,MAAA;IACR,IAAIF,QAAQ,CAAZ,OAAA,EAAsB;MACpBG,MAAM,CAANA,YAAAA,CAAoBH,QAAQ,CAA5BG,OAAAA;;;IAGF,IAAA,WAAA,EAAiB;MACfH,QAAQ,CAARA,OAAAA,GAAmB,MAAM,CAAN,UAAA,CAAkB,MAAA;QACnCI,cAAc,CAAdA,KAAc,CAAdA;MADiB,CAAA,EAAnBJ,OAAmB,CAAnBA;;EANK,CAAA,EAUN,CAAA,WAAA,EAVHE,OAUG,CAVM,CAATA;EAYA,OAAO,CAAA,WAAA,EAKJR,MAAD,IAAA;IACEU,cAAc,CAAdA,MAAc,CAAdA;EANJ,CAAO,CAAP;AASD","sourcesContent":["import React from 'react'\nimport classNames from 'classnames'\n\nimport styles from './styles.module.css'\n\ntype GrowlProps = {\n  active?: boolean\n  message: string\n  onDismissed: () => void\n}\n\nexport const Growl = ({ active, message, onDismissed }: GrowlProps) => (\n  <div\n    className={classNames(styles.growl, {\n      [styles.active]: active\n    })}\n  >\n    {message}\n    <div onClick={onDismissed} className={styles.growlClose} />\n  </div>\n)\n","import { useState, useRef, useEffect } from 'react'\n\nexport function useGrowl(timeout: number = 3000) {\n  // state of the growl\n  const [growlActive, setGrowlActive] = useState(false)\n  const timerRef = useRef<number>()\n\n  useEffect(() => {\n    if (timerRef.current) {\n      window.clearTimeout(timerRef.current)\n    }\n\n    if (growlActive) {\n      timerRef.current = window.setTimeout(() => {\n        setGrowlActive(false)\n      }, timeout)\n    }\n  }, [growlActive, timeout])\n\n  return [\n    // the first arg is the state\n    growlActive,\n\n    // the second arg is a fn that allows you to safely set its state\n    (active: boolean) => {\n      setGrowlActive(active)\n    }\n  ]\n}\n"]},"metadata":{},"sourceType":"module"}