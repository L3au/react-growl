{"ast":null,"code":"import React, { useState, useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nvar styles = {\n  \"growl\": \"_2Nm_9\",\n  \"active\": \"_3sodH\",\n  \"growlClose\": \"_3JGMO\"\n};\n\nvar Growl = function Growl(_ref) {\n  var _classNames;\n\n  var active = _ref.active,\n      message = _ref.message,\n      onDismissed = _ref.onDismissed;\n  return React.createElement(\"div\", {\n    className: classNames(styles.growl, (_classNames = {}, _classNames[styles.active] = active, _classNames))\n  }, message, React.createElement(\"div\", {\n    onClick: onDismissed,\n    className: styles.growlClose\n  }));\n};\n\nfunction useGrowl(timeout) {\n  if (timeout === void 0) {\n    timeout = 3000;\n  }\n\n  var _useState = useState(false),\n      growlActive = _useState[0],\n      setGrowlActive = _useState[1];\n\n  var timerRef = useRef();\n  useEffect(function () {\n    if (timerRef.current) {\n      window.clearTimeout(timerRef.current);\n    }\n\n    if (growlActive) {\n      timerRef.current = window.setTimeout(function () {\n        setGrowlActive(false);\n      }, timeout);\n    }\n  }, [growlActive, timeout]);\n  return [growlActive, function (active) {\n    setGrowlActive(active);\n  }];\n}\n\nexport { Growl, useGrowl };","map":{"version":3,"sources":["../src/Growl.tsx","../src/useGrowl.ts"],"names":["Growl","active","message","onDismissed","className","classNames","styles","onClick","growlClose","useGrowl","timeout","growlActive","setGrowlActive","useState","timerRef","useRef","useEffect","window"],"mappings":";;;;;;;;IAWaA,KAAK,GAAG,SAARA,KAAQ,CAAA,IAAA,EAAA;EAAA,IAAA,WAAA;;EAAA,IAAGC,MAAH,GAAA,IAAA,CAAA,MAAA;EAAA,IAAWC,OAAX,GAAA,IAAA,CAAA,OAAA;EAAA,IAAoBC,WAApB,GAAA,IAAA,CAAA,WAAA;EAAA,OACnB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IACEC,SAAS,EAAEC,UAAU,CAACC,MAAM,CAAP,KAAA,GAAA,WAAA,GAAA,EAAA,EAAA,WAAA,CAClBA,MAAM,CADY,MAAA,CAAA,GAAA,MAAA,EAAA,WAAA;EADvB,CAAA,EAAA,OAAA,EAME,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAKC,OAAO,EAAEJ,WAAd;IAA2BC,SAAS,EAAEE,MAAM,CAACE;EAA7C,CAAA,CANF,CADmB;AAAd,C;;SCTSC,Q,CAASC,O,EAAAA;MAAAA,OAAAA,KAAAA,KAAAA,C,EAAAA;IAAAA,OAAAA,GAAkB,IAAlBA;;;EAEvB,IAAA,SAAA,GAAsCG,QAAQ,CAA9C,KAA8C,CAA9C;EAAA,IAAOF,WAAP,GAAA,SAAA,CAAA,CAAA,CAAA;EAAA,IAAoBC,cAApB,GAAA,SAAA,CAAA,CAAA,CAAA;;EACA,IAAME,QAAQ,GAAGC,MAAjB,EAAA;EAEAC,SAAS,CAAC,YAAA;IACR,IAAIF,QAAQ,CAAZ,OAAA,EAAsB;MACpBG,MAAM,CAANA,YAAAA,CAAoBH,QAAQ,CAA5BG,OAAAA;;;IAGF,IAAA,WAAA,EAAiB;MACfH,QAAQ,CAARA,OAAAA,GAAmB,MAAM,CAAN,UAAA,CAAkB,YAAA;QACnCF,cAAc,CAAdA,KAAc,CAAdA;MADiB,CAAA,EAAnBE,OAAmB,CAAnBA;;EANK,CAAA,EAUN,CAAA,WAAA,EAVHE,OAUG,CAVM,CAATA;EAYA,OAAO,CAAA,WAAA,EAKL,UAAA,MAAA,EAAA;IACEJ,cAAc,CAAdA,MAAc,CAAdA;EANJ,CAAO,CAAP;AASD","sourcesContent":["import React from 'react'\nimport classNames from 'classnames'\n\nimport styles from './styles.module.css'\n\ntype GrowlProps = {\n  active?: boolean\n  message: string\n  onDismissed: () => void\n}\n\nexport const Growl = ({ active, message, onDismissed }: GrowlProps) => (\n  <div\n    className={classNames(styles.growl, {\n      [styles.active]: active\n    })}\n  >\n    {message}\n    <div onClick={onDismissed} className={styles.growlClose} />\n  </div>\n)\n","import { useState, useRef, useEffect } from 'react'\n\nexport function useGrowl(timeout: number = 3000) {\n  // state of the growl\n  const [growlActive, setGrowlActive] = useState(false)\n  const timerRef = useRef<number>()\n\n  useEffect(() => {\n    if (timerRef.current) {\n      window.clearTimeout(timerRef.current)\n    }\n\n    if (growlActive) {\n      timerRef.current = window.setTimeout(() => {\n        setGrowlActive(false)\n      }, timeout)\n    }\n  }, [growlActive, timeout])\n\n  return [\n    // the first arg is the state\n    growlActive,\n\n    // the second arg is a fn that allows you to safely set its state\n    (active: boolean) => {\n      setGrowlActive(active)\n    }\n  ]\n}\n"]},"metadata":{},"sourceType":"module"}