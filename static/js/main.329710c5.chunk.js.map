{"version":3,"sources":["../../src/Growl.tsx","App.tsx","../../src/useGrowl.ts","index.tsx"],"names":["Growl","active","message","onDismissed","className","classNames","styles","onClick","App","timeout","useState","growlActive","setGrowlActive","timerRef","useRef","useEffect","window","useGrowl","setActive","href","event","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"oTAWaA,EAAQ,SAAC,GAAD,MAAGC,EAAH,SAAWC,EAAX,UAAoBC,EAApB,qBACnB,yBACEC,UAAWC,IAAWC,GAAD,OAClBA,GADkB,OADvB,EAME,yBAAKC,QAASJ,EAAaC,UAAWE,M,UCiB3BE,EA9BH,WACV,M,SCFuBC,kBAAkB,KAEzC,MAAsCC,oBAAtC,GAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAWC,mBAcjB,OAZAC,qBAAU,WACJF,EAAJ,SACEG,oBAAoBH,EAApBG,SAGEL,IACFE,UAAmBG,OAAA,YAAkB,WACnCJ,QADFC,MAID,CAACF,EAVJI,IAYO,CAAC,EAKN,YACEH,ODrBwBK,CAAS,KAArC,mBAAOhB,EAAP,KAAeiB,EAAf,KAEA,OACE,yBAAKd,UAAU,OACb,4BAAQA,UAAU,cAChB,mCACO,4CADP,wBAIA,uBACEA,UAAU,WACVe,KAAK,IACLZ,QAAS,SAACa,GACRA,EAAMC,iBACNH,GAAU,KALd,oCAWF,kBAAC,EAAD,CACEf,YAAa,kBAAMe,GAAU,IAC7BjB,OAAQA,EACRC,QAAQ,mBEvBhBoB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.329710c5.chunk.js","sourcesContent":["import React from 'react'\nimport classNames from 'classnames'\n\nimport styles from './styles.module.css'\n\ntype GrowlProps = {\n  active?: boolean\n  message: string\n  onDismissed: () => void\n}\n\nexport const Growl = ({ active, message, onDismissed }: GrowlProps) => (\n  <div\n    className={classNames(styles.growl, {\n      [styles.active]: active\n    })}\n  >\n    {message}\n    <div onClick={onDismissed} className={styles.growlClose} />\n  </div>\n)\n","import React from 'react'\n\nimport { Growl, useGrowl } from '../../'\nimport 'react-growl/dist/index.css'\n\nconst App = () => {\n  const [active, setActive] = useGrowl(5000)\n\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n\n        <a\n          className='App-link'\n          href='x'\n          onClick={(event) => {\n            event.preventDefault()\n            setActive(true)\n          }}\n        >\n          Clik here to activate the growl\n        </a>\n      </header>\n      <Growl\n        onDismissed={() => setActive(false)}\n        active={active}\n        message='Hello World!'\n      />\n    </div>\n  )\n}\n\nexport default App\n","import { useState, useRef, useEffect } from 'react'\n\ntype Result = [boolean, (active: boolean) => void]\n\nexport function useGrowl(timeout: number = 3000): Result {\n  // state of the growl\n  const [growlActive, setGrowlActive] = useState(false)\n  const timerRef = useRef<number>()\n\n  useEffect(() => {\n    if (timerRef.current) {\n      window.clearTimeout(timerRef.current)\n    }\n\n    if (growlActive) {\n      timerRef.current = window.setTimeout(() => {\n        setGrowlActive(false)\n      }, timeout)\n    }\n  }, [growlActive, timeout])\n\n  return [\n    // the first arg is the state\n    growlActive,\n\n    // the second arg is a fn that allows you to safely set its state\n    (active: boolean) => {\n      setGrowlActive(active)\n    }\n  ]\n}\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}